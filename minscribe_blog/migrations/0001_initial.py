# Generated by Django 5.1.7 on 2025-03-16 14:07

import django.db.models.deletion
import minscribe_blog.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('status', models.CharField(max_length=20)),
                ('moderation_flagged', models.BooleanField(default=False)),
                ('moderation_reason', models.TextField(blank=True)),
                ('ai_summary', models.TextField(blank=True)),
                ('ai_keywords', models.TextField(blank=True)),
                ('ai_sentiment', models.CharField(blank=True, max_length=20)),
                ('ai_translation', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('profile_picture', models.ImageField(blank=True, help_text='Maximum file size allowed is 5MB', null=True, upload_to='profile_pictures/', validators=[minscribe_blog.models.validate_image_size])),
                ('bio', models.TextField(blank=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.category')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.post')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('recommendation_id', models.AutoField(primary_key=True, serialize=False)),
                ('recommendation_type', models.CharField(max_length=20)),
                ('recommendation_date', models.DateTimeField(auto_now_add=True)),
                ('recommendation_reason', models.TextField(blank=True)),
                ('algorithm_used', models.CharField(max_length=50)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.post')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.user')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='author_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.user'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('moderation_flagged', models.BooleanField(default=False)),
                ('moderation_reason', models.TextField(blank=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.post')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.user')),
            ],
        ),
        migrations.CreateModel(
            name='CognitiveProfile',
            fields=[
                ('cognitive_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('interest_vectors', models.JSONField()),
                ('learning_style', models.CharField(max_length=50)),
                ('content_preferences', models.JSONField()),
                ('cognitive_profile', models.JSONField()),
                ('social_interactions', models.JSONField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='minscribe_blog.user')),
            ],
        ),
    ]
